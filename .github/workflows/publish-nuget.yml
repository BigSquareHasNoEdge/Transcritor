name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'  # Ïòà: v1.0.0, v1.0.1 Îì±

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    # STEP 1: nuget.config ÏÉùÏÑ±
    - name: Create nuget.config with GitHub credentials
      shell: bash
      run: |
        printf "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" > nuget.config
        printf "<configuration>\n" >> nuget.config
        printf "  <packageSources>\n" >> nuget.config
        printf "    <add key=\"github\" value=\"https://nuget.pkg.github.com/%s/index.json\" />\n" "$GITHUB_REPOSITORY_OWNER" >> nuget.config
        printf "  </packageSources>\n" >> nuget.config
        printf "  <packageSourceCredentials>\n" >> nuget.config
        printf "    <github>\n" >> nuget.config
        printf "      <Username>%s</Username>\n" "$GITHUB_REPOSITORY_OWNER" >> nuget.config
        printf "      <ClearTextPassword>%s</ClearTextPassword>\n" "$GITHUB_TOKEN" >> nuget.config
        printf "    </github>\n" >> nuget.config
        printf "  </packageSourceCredentials>\n" >> nuget.config
        printf "</configuration>\n" >> nuget.config

    # STEP 2: nuget.config Í≤ÄÏ¶ù
    - name: Verify nuget.config was created correctly
      run: |
        if [ -f nuget.config ]; then
          echo "‚úÖ nuget.config exists."
          echo "üîç Contents:"
          cat nuget.config
        else
          echo "‚ùå nuget.config not found!"
          exit 1
        fi

    # STEP 3: Transcriptor ÎπåÎìú Î∞è Ìë∏Ïãú
    - name: Build Transcriptor
      run: dotnet build ./Transcriptor/Transcriptor.csproj -c Release

    - name: Pack Transcriptor
      run: dotnet pack ./Transcriptor/Transcriptor.csproj -c Release --output ./nupkg

    - name: Push Transcriptor to GitHub Packages
      run: dotnet nuget push ./nupkg/Transcriptor.*.nupkg --source "github"

    # STEP 4: Ï∞∏Ï°∞ Ï†ÑÌôò
    - name: Remove ProjectReference to Transcriptor
      run: dotnet remove ./Transcriptor.HanguelRomanization/Transcriptor.HanguelRomanization.csproj reference ../Transcriptor/Transcriptor.csproj

    - name: Add PackageReference to Transcriptor
      run: dotnet add ./Transcriptor.HanguelRomanization/Transcriptor.HanguelRomanization.csproj package Transcriptor --version 1.0.0 --source "github"

    # STEP 5: Transcriptor.HanguelRomanization ÎπåÎìú Î∞è Ìë∏Ïãú
    - name: Build Transcriptor.HanguelRomanization
      run: dotnet build ./Transcriptor.HanguelRomanization/Transcriptor.HanguelRomanization.csproj -c Release

    - name: Pack Transcriptor.HanguelRomanization
      run: dotnet pack ./Transcriptor.HanguelRomanization/Transcriptor.HanguelRomanization.csproj -c Release --output ./nupkg

    - name: Push Transcriptor.HanguelRomanization to GitHub Packages
      run: dotnet nuget push ./nupkg/Transcriptor.HanguelRomanization.*.nupkg --source "github"
